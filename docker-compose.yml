services:

  db:
    image: postgres:15
    container_name: labelapi-postgres
    environment:
      POSTGRES_DB: labelapidb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Test2025@
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./label-api/database:/docker-entrypoint-initdb.d:ro
    networks:
      - labelapi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d labelapidb"]
      interval: 10s
      timeout: 5s
      retries: 5

  label-api:
    build:
      context: .
      dockerfile: label-api/Dockerfile
    container_name: labelapi-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=labelapidb;Username=postgres;Password=Test2025@
      - AdminUser__Email=admin@labelapi.com
      - AdminUser__Password=Admin123!
      - MediaBaseUrl=http://localhost:8081/media
    ports:
      - "${API_PORT:-8080}:8080"  # Configurable API port, defaults to 8080
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
    networks:
      - labelapi-network
    restart: unless-stopped

  # Nginx for serving media files
  nginx:
    image: nginx:alpine
    container_name: labelapi-nginx
    ports:
      - "${NGINX_PORT:-8081}:80"  # Configurable nginx port, defaults to 8081
    volumes:
      - uploads_data:/usr/share/nginx/html/media:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - label-api
    networks:
      - labelapi-network
    restart: unless-stopped

volumes:
  postgres_data:
  uploads_data:  # Shared volume for media files

networks:
  labelapi-network:
    driver: bridge    

    